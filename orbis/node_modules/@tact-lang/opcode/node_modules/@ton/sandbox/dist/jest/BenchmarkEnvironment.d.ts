import type { EnvironmentContext } from '@jest/environment';
import NodeEnvironment from 'jest-environment-node';
import { Config } from '@jest/types';
import { BenchmarkCommand, BenchmarkCommandOption } from './BenchmarkCommand';
export declare const sandboxMetricRawFile = ".sandbox-metric-raw.jsonl";
export type BenchmarkEnvironmentConfig = {
    projectConfig: Config.ProjectConfig & {
        testEnvironmentCommand?: Partial<BenchmarkCommandOption>;
    };
    globalConfig: Config.GlobalConfig;
};
export default class BenchmarkEnvironment extends NodeEnvironment {
    protected command: BenchmarkCommand;
    protected rootDir: string;
    constructor(config: BenchmarkEnvironmentConfig, context: EnvironmentContext);
    setup(): Promise<void>;
    get resultFile(): string;
    teardown(): Promise<void>;
}
