"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeCompletionTag = exports.prefixToBin = void 0;
const core_1 = require("@ton/core");
const node_buffer_1 = require("node:buffer");
const prefixToBin = (prefix) => {
    const completionTag = prefix.endsWith("_");
    if (completionTag) {
        prefix = prefix.slice(0, -1);
    }
    const padLength = prefix.length % 2;
    const paddedHex = prefix.padEnd(prefix.length + padLength, "0");
    const buffer = node_buffer_1.Buffer.from(paddedHex, "hex");
    const bits = new core_1.BitString(buffer, 0, buffer.byteLength * 8 - padLength * 4);
    if (completionTag) {
        return (0, exports.removeCompletionTag)(bits);
    }
    return bits;
};
exports.prefixToBin = prefixToBin;
const removeCompletionTag = (bits) => {
    const lastSetBitIndex = Array.from({ length: bits.length }).findIndex((_, i) => bits.at(bits.length - 1 - i));
    if (lastSetBitIndex === -1) {
        throw new Error("no completion tag");
    }
    return bits.substring(0, bits.length - lastSetBitIndex - 1);
};
exports.removeCompletionTag = removeCompletionTag;
//# sourceMappingURL=binutils.js.map