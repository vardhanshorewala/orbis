"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UnknownOperandTypeError = exports.OperandError = exports.DisassemblerError = void 0;
class DisassemblerError extends Error {
    constructor(message, details) {
        const detailsStr = details
            ? "\nDetails:\n" +
                Object.entries(details)
                    .map(([key, value]) => `  ${key}: ${JSON.stringify(value, null, 2)}`)
                    .join("\n")
            : "";
        super(message + detailsStr);
        this.name = "DisassemblerError";
    }
}
exports.DisassemblerError = DisassemblerError;
class OperandError extends DisassemblerError {
    constructor(opcode, operandName, expectedType, details) {
        super(`Cannot find ${expectedType} operand "${operandName}" for "${opcode}"`, {
            opcode,
            operandName,
            expectedType,
            ...details,
        });
        this.name = "OperandError";
    }
}
exports.OperandError = OperandError;
class UnknownOperandTypeError extends DisassemblerError {
    constructor(operand, details) {
        super(`Unknown operand type: ${operand.type}`, {
            type: operand.type,
            ...details,
        });
        this.name = "UnknownOperandTypeError";
    }
}
exports.UnknownOperandTypeError = UnknownOperandTypeError;
//# sourceMappingURL=errors.js.map