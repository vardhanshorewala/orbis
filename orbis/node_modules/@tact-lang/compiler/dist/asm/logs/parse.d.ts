import type { Stack } from "./stack";
export type VmLine = VmLoc | VmStack | VmExecute | VmLimitChanged | VmGasRemaining | VmException | VmExceptionHandler | VmFinalC5 | VmUnknown;
export type VmLoc = {
    readonly $: "VmLoc";
    readonly hash: string;
    readonly offset: number;
};
export type VmStack = {
    readonly $: "VmStack";
    readonly stack: Stack;
};
export type VmExecute = {
    readonly $: "VmExecute";
    readonly instr: string;
};
export type VmLimitChanged = {
    readonly $: "VmLimitChanged";
    readonly limit: number;
};
export type VmGasRemaining = {
    readonly $: "VmGasRemaining";
    readonly gas: number;
};
export type VmException = {
    readonly $: "VmException";
    readonly errno: number;
    readonly message: string;
};
export type VmExceptionHandler = {
    readonly $: "VmExceptionHandler";
    readonly errno: number;
};
export type VmFinalC5 = {
    readonly $: "VmFinalC5";
    readonly hex: string;
};
export type VmUnknown = {
    readonly $: "VmUnknown";
    readonly text: string;
};
export declare const parse: (log: string) => VmLine[];
