export declare const createContext: (s: string, space: Rule) => {
    s: string;
    p: number;
    l: number;
    space: Rule;
};
export type Context = {
    s: string;
    p: number;
    l: number;
    space: undefined | Rule;
};
export type Rule = (ctx: Context, b: Builder, field?: string) => boolean;
export type Cst = CstLeaf | CstNode;
export type CstLeaf = {
    readonly $: "leaf";
    readonly id: number;
    readonly text: string;
};
export type CstNode = {
    readonly $: "node";
    readonly id: number;
    readonly type: string;
    readonly group: string;
    readonly field: string;
    readonly children: readonly Cst[];
};
export declare const CstLeaf: (text: string) => CstLeaf;
export declare const CstNode: (children: readonly Cst[], type?: string, field?: string, group?: string) => CstNode;
export type Builder = Cst[];
export declare const consumeAny: (ctx: Context, b: Builder) => boolean;
export declare const skip: (ctx: Context, b: Builder) => void;
export declare const Module: Rule;
export declare const Import: Rule;
export declare const moduleItem: Rule;
export declare const contractItemDecl: Rule;
export declare const traitItemDecl: Rule;
export declare const PrimitiveTypeDecl: Rule;
export declare const $Function: Rule;
export declare const FunctionDefinition: Rule;
export declare const FunctionDeclaration: Rule;
export declare const AsmFunction: Rule;
export declare const shuffle: Rule;
export declare const NativeFunctionDecl: Rule;
export declare const Constant: Rule;
export declare const ConstantAttribute: Rule;
export declare const ConstantDefinition: Rule;
export declare const ConstantDeclaration: Rule;
export declare const storageVar: Rule;
export declare const StructDecl: Rule;
export declare const MessageDecl: Rule;
export declare const structFields: Rule;
export declare const FieldDecl: Rule;
export declare const Contract: Rule;
export declare const Trait: Rule;
export declare const inheritedTraits: Rule;
export declare const ContractInit: Rule;
export declare const ContractAttribute: Rule;
export declare const FunctionAttribute: Rule;
export declare const GetAttribute: Rule;
export declare const Receiver: Rule;
export declare const ReceiverType: Rule;
export declare const receiverParam: Rule;
export declare const assembly: Rule;
export declare const assemblySequence: Rule;
export declare const assemblyItem: Rule;
export declare const ascription: Rule;
export declare const $type: Rule;
export declare const TypeAs: Rule;
export declare const TypeOptional: Rule;
export declare const typePrimary: Rule;
export declare const TypeRegular: Rule;
export declare const TypeGeneric: Rule;
export declare const MapKeyword: Rule;
export declare const Bounced: Rule;
export declare const TypeId: Rule;
export declare const typeArgs: Rule;
export declare const generic: (T: Rule) => Rule;
export declare const statement: Rule;
export declare const statements: Rule;
export declare const StatementLet: Rule;
export declare const StatementDestruct: Rule;
export declare const StatementBlock: Rule;
export declare const StatementReturn: Rule;
export declare const StatementExpression: Rule;
export declare const StatementAssign: Rule;
export declare const StatementCondition: Rule;
export declare const StatementWhile: Rule;
export declare const StatementRepeat: Rule;
export declare const StatementUntil: Rule;
export declare const StatementTry: Rule;
export declare const StatementForEach: Rule;
export declare const augmentedOp: Rule;
export declare const FalseBranch: Rule;
export declare const semicolon: Rule;
export declare const destructItem: Rule;
export declare const RegularField: Rule;
export declare const PunnedField: Rule;
export declare const optionalRest: Rule;
export declare const RestArgument: Rule;
export declare const NoRestArgument: Rule;
export declare const expression: Rule;
export declare const Conditional: Rule;
export declare const or: Rule;
export declare const and: Rule;
export declare const bitwiseOr: Rule;
export declare const bitwiseXor: Rule;
export declare const bitwiseAnd: Rule;
export declare const equality: Rule;
export declare const compare: Rule;
export declare const bitwiseShift: Rule;
export declare const add: Rule;
export declare const mul: Rule;
export declare const Unary: Rule;
export declare const Suffix: Rule;
export declare const Binary: (T: Rule, U: Rule) => Rule;
export declare const Operator: (U: Rule) => Rule;
export declare const suffix: Rule;
export declare const SuffixUnboxNotNull: Rule;
export declare const SuffixCall: Rule;
export declare const SuffixFieldAccess: Rule;
export declare const primary: Rule;
export declare const Null: Rule;
export declare const parens: Rule;
export declare const Parens: Rule;
export declare const StructInstance: Rule;
export declare const StructInstanceFields: Rule;
export declare const MapLiteral: Rule;
export declare const mapField: Rule;
export declare const SetLiteral: Rule;
export declare const InitOf: Rule;
export declare const CodeOf: Rule;
export declare const StructFieldInitializer: Rule;
export declare const ParameterList: (T: Rule) => Rule;
export declare const Parameter: Rule;
export declare const commaList: (T: Rule) => Rule;
export declare const IntegerLiteral: Rule;
export declare const IntegerLiteralDec: Rule;
export declare const IntegerLiteralHex: Rule;
export declare const IntegerLiteralBin: Rule;
export declare const IntegerLiteralOct: Rule;
export declare const underscored: (T: Rule) => Rule;
export declare const digit: Rule;
export declare const idPart: Rule;
export declare const Id: Rule;
export declare const FuncId: Rule;
export declare const BoolLiteral: Rule;
export declare const StringLiteral: Rule;
export declare const escapeChar: Rule;
export declare const hexDigit: Rule;
export declare const keyword: (T: Rule) => Rule;
export declare const reservedWord: Rule;
export declare const space: Rule;
export declare const Comment: Rule;
export declare const multiLineComment: Rule;
export declare const singleLineComment: Rule;
export declare const JustImports: Rule;
export declare const inter: (A: Rule, B: Rule) => Rule;
export declare const Module_star_0: Rule;
export declare const Module_star_1: Rule;
export declare const $Function_star_2: Rule;
export declare const $Function_optional_3: Rule;
export declare const $Function_alt_4: Rule;
export declare const AsmFunction_optional_5: Rule;
export declare const AsmFunction_star_6: Rule;
export declare const AsmFunction_optional_7: Rule;
export declare const shuffle_star_8: Rule;
export declare const shuffle_plus_9: Rule;
export declare const shuffle_seq_10: Rule;
export declare const shuffle_optional_11: Rule;
export declare const NativeFunctionDecl_lex_12: Rule;
export declare const NativeFunctionDecl_star_13: Rule;
export declare const NativeFunctionDecl_optional_14: Rule;
export declare const Constant_star_15: Rule;
export declare const Constant_alt_16: Rule;
export declare const ConstantAttribute_alt_17: Rule;
export declare const MessageDecl_seq_18: Rule;
export declare const MessageDecl_optional_19: Rule;
export declare const structFields_optional_20: Rule;
export declare const structFields_optional_21: Rule;
export declare const FieldDecl_seq_22: Rule;
export declare const FieldDecl_optional_23: Rule;
export declare const Contract_star_24: Rule;
export declare const Contract_optional_25: Rule;
export declare const Contract_optional_26: Rule;
export declare const Contract_star_27: Rule;
export declare const Trait_star_28: Rule;
export declare const Trait_optional_29: Rule;
export declare const Trait_star_30: Rule;
export declare const FunctionAttribute_alt_31: Rule;
export declare const GetAttribute_seq_32: Rule;
export declare const GetAttribute_optional_33: Rule;
export declare const ReceiverType_alt_34: Rule;
export declare const receiverParam_alt_35: Rule;
export declare const receiverParam_optional_36: Rule;
export declare const assembly_stringify_37: Rule;
export declare const assemblyItem_seq_38: Rule;
export declare const assemblyItem_star_39: Rule;
export declare const assemblyItem_seq_40: Rule;
export declare const assemblyItem_alt_41: Rule;
export declare const assemblyItem_lookneg_42: Rule;
export declare const assemblyItem_seq_43: Rule;
export declare const assemblyItem_plus_44: Rule;
export declare const TypeAs_seq_45: Rule;
export declare const TypeAs_star_46: Rule;
export declare const TypeOptional_star_47: Rule;
export declare const TypeGeneric_alt_48: Rule;
export declare const TypeId_star_49: Rule;
export declare const TypeId_seq_50: Rule;
export declare const TypeId_stringify_51: Rule;
export declare const TypeId_lex_52: Rule;
export declare const generic_optional_53: (T: Rule) => Rule;
export declare const statements_star_54: Rule;
export declare const StatementLet_optional_55: Rule;
export declare const StatementReturn_optional_56: Rule;
export declare const StatementAssign_alt_57: Rule;
export declare const StatementCondition_alt_58: Rule;
export declare const StatementCondition_seq_59: Rule;
export declare const StatementCondition_optional_60: Rule;
export declare const StatementTry_seq_61: Rule;
export declare const StatementTry_optional_62: Rule;
export declare const semicolon_lookpos_63: Rule;
export declare const optionalRest_seq_64: Rule;
export declare const Conditional_seq_65: Rule;
export declare const Conditional_optional_66: Rule;
export declare const equality_alt_67: Rule;
export declare const compare_alt_68: Rule;
export declare const bitwiseShift_alt_69: Rule;
export declare const add_alt_70: Rule;
export declare const Unary_star_71: Rule;
export declare const Suffix_star_72: Rule;
export declare const StructInstanceFields_optional_73: Rule;
export declare const MapLiteral_optional_74: Rule;
export declare const SetLiteral_optional_75: Rule;
export declare const StructFieldInitializer_seq_76: Rule;
export declare const StructFieldInitializer_optional_77: Rule;
export declare const ParameterList_optional_78: (T: Rule) => Rule;
export declare const commaList_optional_79: (T: Rule) => Rule;
export declare const IntegerLiteral_alt_80: Rule;
export declare const IntegerLiteralDec_lex_81: Rule;
export declare const IntegerLiteralHex_seq_82: Rule;
export declare const IntegerLiteralHex_lex_83: Rule;
export declare const IntegerLiteralBin_seq_84: Rule;
export declare const IntegerLiteralBin_lex_85: Rule;
export declare const IntegerLiteralOct_seq_86: Rule;
export declare const IntegerLiteralOct_lex_87: Rule;
export declare const underscored_optional_88: (T: Rule) => Rule;
export declare const underscored_seq_89: (T: Rule) => Rule;
export declare const underscored_star_90: (T: Rule) => Rule;
export declare const underscored_seq_91: (T: Rule) => Rule;
export declare const Id_lookneg_92: Rule;
export declare const Id_star_93: Rule;
export declare const Id_seq_94: Rule;
export declare const Id_stringify_95: Rule;
export declare const Id_lex_96: Rule;
export declare const FuncId_optional_97: Rule;
export declare const FuncId_plus_98: Rule;
export declare const FuncId_seq_99: Rule;
export declare const FuncId_plus_100: Rule;
export declare const FuncId_alt_101: Rule;
export declare const FuncId_stringify_102: Rule;
export declare const BoolLiteral_alt_103: Rule;
export declare const BoolLiteral_lookneg_104: Rule;
export declare const StringLiteral_seq_105: Rule;
export declare const StringLiteral_alt_106: Rule;
export declare const StringLiteral_star_107: Rule;
export declare const StringLiteral_stringify_108: Rule;
export declare const StringLiteral_seq_109: Rule;
export declare const StringLiteral_lex_110: Rule;
export declare const escapeChar_optional_111: Rule;
export declare const escapeChar_optional_112: Rule;
export declare const escapeChar_optional_113: Rule;
export declare const escapeChar_optional_114: Rule;
export declare const escapeChar_optional_115: Rule;
export declare const escapeChar_seq_116: Rule;
export declare const escapeChar_stringify_117: Rule;
export declare const escapeChar_seq_118: Rule;
export declare const escapeChar_seq_119: Rule;
export declare const escapeChar_stringify_120: Rule;
export declare const escapeChar_seq_121: Rule;
export declare const escapeChar_seq_122: Rule;
export declare const escapeChar_stringify_123: Rule;
export declare const escapeChar_seq_124: Rule;
export declare const keyword_lookneg_125: (T: Rule) => Rule;
export declare const keyword_seq_126: (T: Rule) => Rule;
export declare const reservedWord_alt_127: Rule;
export declare const space_plus_128: Rule;
export declare const space_stringify_129: Rule;
export declare const space_lex_130: Rule;
export declare const space_alt_131: Rule;
export declare const multiLineComment_lookneg_132: Rule;
export declare const multiLineComment_seq_133: Rule;
export declare const multiLineComment_star_134: Rule;
export declare const multiLineComment_stringify_135: Rule;
export declare const singleLineComment_star_136: Rule;
export declare const singleLineComment_stringify_137: Rule;
export declare const JustImports_star_138: Rule;
export declare const JustImports_star_139: Rule;
export declare const inter_seq_140: (A: Rule, B: Rule) => Rule;
export declare const inter_star_141: (A: Rule, B: Rule) => Rule;
