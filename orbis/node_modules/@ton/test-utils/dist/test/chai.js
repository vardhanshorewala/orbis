"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const comparisons_1 = require("./comparisons");
const transaction_1 = require("./transaction");
const exitCode_1 = require("./exitCode");
function wrapComparer(comparer) {
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return function (cmp) {
        const assertResult = (result) => {
            this.assert(result.pass, result.posMessage(), result.negMessage());
        };
        const result = comparer(this._obj, cmp);
        if (result instanceof Promise) {
            return result.then(assertResult);
        }
        return assertResult(result);
    };
}
try {
    // eslint-disable-next-line @typescript-eslint/no-require-imports
    const chai = require('chai');
    if (chai)
        // eslint-disable-next-line no-undef
        chai.use((chai) => {
            const Assertion = chai.Assertion;
            Assertion.addMethod('transaction', wrapComparer(transaction_1.compareTransactionForTest));
            Assertion.addMethod('equalCell', wrapComparer(comparisons_1.compareCellForTest));
            Assertion.addMethod('equalAddress', wrapComparer(comparisons_1.compareAddressForTest));
            Assertion.addMethod('equalSlice', wrapComparer(comparisons_1.compareSliceForTest));
            Assertion.addMethod('throwExitCode', wrapComparer(exitCode_1.compareThrownExitCodeForTest));
        });
    // eslint-disable-next-line no-empty
}
catch (_) { }
