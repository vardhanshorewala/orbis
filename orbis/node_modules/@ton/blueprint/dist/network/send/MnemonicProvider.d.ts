import { Buffer } from 'buffer';
import { Address, Cell, StateInit } from '@ton/core';
import { SendProvider } from './SendProvider';
import { UIProvider } from '../../ui/UIProvider';
import { BlueprintTonClient } from '../NetworkProvider';
import { Network } from '../Network';
import { WalletVersion } from './wallets';
type MnemonicProviderParams = {
    version: WalletVersion;
    workchain?: number;
    walletId?: number;
    subwalletNumber?: number;
    secretKey: Buffer;
    client: BlueprintTonClient;
    ui: UIProvider;
    network: Network;
};
export declare class MnemonicProvider implements SendProvider {
    #private;
    constructor(params: MnemonicProviderParams);
    private createWallet;
    connect(): Promise<void>;
    sendTransaction(address: Address, amount: bigint, payload?: Cell | undefined, stateInit?: StateInit | undefined): Promise<void>;
    address(): Address;
}
export {};
