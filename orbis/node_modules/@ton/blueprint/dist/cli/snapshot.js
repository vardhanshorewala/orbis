"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.snapshot = exports.argSpec = void 0;
const node_child_process_1 = require("node:child_process");
const arg_1 = __importDefault(require("arg"));
const constants_1 = require("./constants");
exports.argSpec = {
    '--label': String,
    '-l': '--label',
};
const snapshot = async (args, ui) => {
    const localArgs = (0, arg_1.default)({ ...exports.argSpec, ...constants_1.helpArgs });
    if (localArgs['--help']) {
        ui.write(constants_1.helpMessages['snapshot']);
        return;
    }
    let comment = localArgs['--label'];
    let testArgs = args._.slice(1); // first argument is `snapshot`, need to get rid of it
    if (typeof comment === 'undefined') {
        comment = await ui.input('Enter comment:');
    }
    else {
        testArgs = testArgs.slice(2);
    }
    (0, node_child_process_1.execSync)(`npm test -- ${testArgs.join(' ')}`, {
        stdio: 'inherit',
        env: {
            ...process.env,
            BENCH_NEW: comment,
        },
    });
};
exports.snapshot = snapshot;
