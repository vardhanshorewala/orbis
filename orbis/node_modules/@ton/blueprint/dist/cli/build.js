"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.build = void 0;
exports.selectContract = selectContract;
const arg_1 = __importDefault(require("arg"));
const utils_1 = require("../utils");
const build_1 = require("../build");
const constants_1 = require("./constants");
const Runner_1 = require("./Runner");
async function selectContract(ui, hint, withAllOption = false) {
    const contracts = await (0, utils_1.findContracts)();
    const options = contracts.map((contract) => ({ name: contract, value: contract }));
    const allContractsValue = 'all_contracts';
    if (withAllOption) {
        const allContractsOption = {
            name: 'All Contracts',
            value: allContractsValue,
        };
        options.push(allContractsOption);
    }
    const selectedOption = await (0, utils_1.selectOption)(options, {
        msg: 'Select contract to use',
        ui,
        hint,
    });
    if (selectedOption.value === allContractsValue) {
        return contracts;
    }
    return selectedOption.value;
}
const build = async (args, ui) => {
    const localArgs = (0, arg_1.default)({
        '--all': Boolean,
        ...constants_1.helpArgs,
    });
    if (localArgs['--help']) {
        ui.write(constants_1.helpMessages['build']);
        return;
    }
    if (localArgs['--all']) {
        await (0, build_1.buildAll)(ui);
    }
    else {
        const selected = await selectContract(ui, (0, Runner_1.extractFirstArg)(args), true);
        if (typeof selected === 'string') {
            await (0, build_1.buildOne)(selected, ui);
        }
        else {
            await (0, build_1.buildAll)(ui);
        }
    }
};
exports.build = build;
